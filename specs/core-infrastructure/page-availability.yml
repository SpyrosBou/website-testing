# Page Availability Testing Specification
# Validates that all configured pages are accessible and return appropriate HTTP responses

metadata:
  category: "core-infrastructure"
  version: "1.0.0"
  description: "Validates page accessibility and HTTP response handling"
  priority: "critical"
  dependencies: ["test-helpers", "site-loader"]
  tags:
    - "smoke-test"
    - "core-infrastructure"
    - "page-availability"

configuration:
  timeout: 30000
  retries: 2
  parallel: true
  browsers: ["chrome", "firefox", "safari"]

test_cases:
  - name: "page_availability_check"
    description: "Verify all configured pages load successfully or handle errors gracefully"
    priority: "critical"
    reporting:
      epic: "Core Infrastructure"
      feature: "Page Availability"
      story: "As a user, I want all website pages to be accessible"
      severity: "critical"
    
    setup:
      - action: "load_site_config"
        description: "Load site configuration with test pages"
      - action: "setup_error_context"
        description: "Initialize error tracking"
    
    execution:
      for_each_page: "{{siteConfig.testPages}}"
      steps:
        - action: "navigate_safely"
          target: "{{baseUrl}}{{currentPage}}"
          timeout: 20000
          description: "Navigate to {{currentPage}}"
        
        - action: "capture_response_status"
          description: "Record HTTP response status"
        
        - action: "handle_response_by_status"
          conditions:
            "200":
              - assert_page_loaded: true
              - log_success: "‚úÖ {{currentPage}} loaded successfully"
            "404":
              - log_info: "‚ö†Ô∏è  Page not found: {{currentPage}} - skipping further tests"
              - skip_remaining_assertions: true
            "500-599":
              - log_error: "üí• Server error on {{currentPage}}: {{responseStatus}}"
              - take_screenshot: true
              - fail_test: true
            "300-399":
              - log_info: "üîÑ Redirect detected for {{currentPage}}: {{responseStatus}}"
              - follow_redirect: true
              - assert_final_status: 200
            "400-499":
              - log_error: "‚ùå Client error on {{currentPage}}: {{responseStatus}}"
              - take_screenshot: true
              - soft_fail: true
        
        - action: "validate_basic_page_structure"
          if: "responseStatus === 200"
          checks:
            - html_tag_present: true
            - head_tag_present: true
            - body_tag_present: true
            - title_not_empty: true
          description: "Verify basic HTML structure"
    
    assertions:
      - type: "response_handling"
        description: "All pages handle HTTP responses appropriately"
        acceptance_criteria:
          - "200 status pages load successfully"
          - "404 errors are gracefully reported"
          - "500 errors are properly detected and reported"
          - "Redirects are followed and final status validated"

error_handling:
  soft_assertions: true
  screenshot_on_failure: true
  trace_on_failure: true
  error_recovery:
    - error_type: "timeout"
      action: "log_and_continue"
      message: "Page {{currentPage}} timed out - this may indicate slow loading or server issues"
    - error_type: "navigation"
      action: "retry_once"
      delay: 2000

integration:
  reporting_reporting:
    include_steps: true
    step_descriptions:
      - "Navigate to each configured page"
      - "Validate HTTP response status"
      - "Handle different response codes appropriately"
      - "Report results with appropriate severity"
    attachments:
      - type: "screenshot"
        when: "on_failure"
      - type: "response_details"
        when: "always"