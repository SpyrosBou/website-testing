# Form Testing Specification
# Comprehensive form testing using semantic queries and test data

metadata:
  category: "interactive-elements"
  version: "1.0.0"
  description: "Comprehensive form testing with validation and accessibility"
  priority: "high"
  dependencies: ["test-helpers", "site-loader", "test-data-factory", "wordpress-page-objects"]
  tags:
    - "form-testing"
    - "user-input"
    - "validation"
    - "accessibility"

configuration:
  timeout: 30000
  retries: 2
  parallel: false  # Sequential to avoid form conflicts
  browsers: ["chrome", "firefox", "safari"]
  form_testing:
    prevent_actual_submission: true
    test_validation_only: true
    use_test_data: true

test_cases:
  - name: "form_discovery_and_analysis"
    description: "Discover and analyze form structure and capabilities"
    priority: "high"
    reporting:
      epic: "Interactive Elements"
      feature: "Form Discovery"
      story: "As a tester, I want to discover and understand form structure"
      severity: "normal"
    
    execution:
      for_each_page: "{{siteConfig.testPages}}"
      conditions:
        - response_status: 200
      steps:
        - action: "navigate_safely"
          target: "{{baseUrl}}{{currentPage}}"
          description: "Navigate to {{currentPage}}"
        
        - action: "discover_forms"
          methods:
            semantic:
              - "form[role='form']"
              - "form"
            plugin_specific:
              - ".wpcf7-form"           # Contact Form 7
              - ".gform_wrapper form"   # Gravity Forms
              - ".elementor-form"       # Elementor
              - ".wpforms-form"         # WPForms
              - ".ninja-forms-form"     # Ninja Forms
              - ".caldera-form"         # Caldera Forms
            generic:
              - ".contact-form"
              - ".form"
              - "[id*='contact']"
          description: "Discover forms using multiple detection strategies"
        
        - action: "analyze_form_structure"
          for_each_discovered_form: true
          extract_metadata:
            - form_id: true
            - form_action: true
            - form_method: true
            - field_count: true
            - field_types: true
            - validation_attributes: true
            - accessibility_features: true
          description: "Analyze structure of discovered forms"
        
        - action: "map_form_fields"
          field_detection:
            semantic_first:
              - name_field: "input[role='textbox'][aria-label*='name'], input[name*='name'], input[id*='name']"
              - email_field: "input[role='textbox'][aria-label*='email'], input[type='email'], input[name*='email']"
              - phone_field: "input[role='textbox'][aria-label*='phone'], input[type='tel'], input[name*='phone']"
              - message_field: "textarea[aria-label*='message'], textarea[name*='message'], textarea[id*='message']"
              - subject_field: "input[aria-label*='subject'], input[name*='subject'], select[name*='subject']"
            fallback_css:
              - name_field: "input[name*='your-name'], input[placeholder*='name']"
              - email_field: "input[name*='your-email'], input[placeholder*='email']"
              - message_field: "textarea[name*='your-message'], textarea[placeholder*='message']"
          description: "Map form fields using semantic queries with CSS fallbacks"

  - name: "form_field_validation_testing"
    description: "Test form field validation and user input handling"
    priority: "high"
    reporting:
      epic: "Interactive Elements"
      feature: "Form Validation"
      story: "As a user, I want forms to validate my input correctly"
      severity: "normal"
    
    execution:
      for_each_discovered_form: true
      steps:
        - action: "generate_test_data"
          using: "test-data-factory"
          data_types:
            - valid_contact_form: true
            - invalid_email_formats: true
            - edge_case_inputs: true
            - accessibility_test_data: true
          description: "Generate comprehensive test data scenarios"
        
        - action: "test_field_validation"
          validation_scenarios:
            required_fields:
              - test: "empty_submission"
                expect: "validation_error"
              - test: "partial_completion"
                expect: "specific_field_errors"
            email_validation:
              - test: "valid_email"
                input: "{{testData.validEmail}}"
                expect: "acceptance"
              - test: "invalid_email_format"
                input: "invalid-email"
                expect: "validation_error"
              - test: "email_with_special_chars"
                input: "test+tag@example.com"
                expect: "acceptance"
            text_field_validation:
              - test: "normal_text_input"
                expect: "acceptance"
              - test: "special_characters"
                input: "Test with símböls & numbers 123"
                expect: "acceptance"
              - test: "excessive_length"
                input: "{{testData.longText}}"
                expect: "length_validation"
          description: "Test various field validation scenarios"
        
        - action: "test_accessibility_compliance"
          accessibility_checks:
            - form_labels: "all fields have accessible labels"
            - error_announcements: "validation errors are announced"
            - field_descriptions: "help text is properly associated"
            - focus_management: "focus moves appropriately on errors"
          description: "Verify form accessibility compliance"

  - name: "form_interaction_patterns"
    description: "Test common form interaction patterns and workflows"
    priority: "medium"
    reporting:
      epic: "Interactive Elements"
      feature: "Form Interactions"
      story: "As a user, I want intuitive form interaction patterns"
      severity: "normal"
    
    execution:
      for_each_discovered_form: true
      steps:
        - action: "test_progressive_enhancement"
          scenarios:
            - javascript_enabled: true
            - javascript_disabled: false  # Can't disable JS in Playwright
          checks:
            - form_still_functional: true
            - validation_still_works: true
          description: "Test form functionality with and without JavaScript"
        
        - action: "test_user_interaction_patterns"
          patterns:
            tab_navigation:
              - test: "tab_through_fields"
                validate: "logical_tab_order"
            keyboard_shortcuts:
              - test: "enter_key_submission"
                validate: "form_submits_or_validates"
            multi_step_forms:
              - test: "step_navigation"
                validate: "data_persistence"
                if: "multi_step_detected"
          description: "Test common user interaction patterns"
        
        - action: "test_form_feedback_mechanisms"
          feedback_types:
            - real_time_validation: "validate on blur/change"
            - submit_button_states: "disabled/enabled states"
            - loading_indicators: "submission feedback"
            - success_messages: "completion confirmation"
            - error_message_display: "clear error presentation"
          description: "Test form feedback and user communication"

  - name: "wordpress_specific_form_testing"
    description: "Test WordPress-specific form features and integrations"
    priority: "medium"
    reporting:
      epic: "Interactive Elements"
      feature: "WordPress Forms"
      story: "As a WordPress user, I want plugin forms to work correctly"
      severity: "normal"
    
    execution:
      wordpress_forms_only: true
      steps:
        - action: "test_contact_form_7"
          if: "cf7_detected"
          specific_tests:
            - ajax_submission: true
            - field_validation: true
            - spam_protection: true
            - file_upload: false  # Skip file uploads
          description: "Test Contact Form 7 specific functionality"
        
        - action: "test_gravity_forms"
          if: "gravity_forms_detected"
          specific_tests:
            - conditional_logic: true
            - multi_page_forms: true
            - field_calculations: true
          description: "Test Gravity Forms specific features"
        
        - action: "test_wordpress_form_integrations"
          integrations:
            - spam_protection: "reCAPTCHA, Akismet"
            - email_delivery: "SMTP configuration"
            - database_storage: "form submissions"
          validation_only: true  # Don't actually test integrations
          description: "Validate WordPress form integration points"

assertions:
  critical:
    - "All forms are discoverable and analyzable"
    - "Required field validation works correctly"
    - "Email validation functions properly"
    - "Forms are accessible to screen readers"
  
  normal:
    - "Form feedback is clear and helpful"
    - "Keyboard navigation works correctly"
    - "WordPress plugin forms function as expected"
    - "Real-time validation provides good user experience"
  
  minor:
    - "Form styling is consistent"
    - "Progressive enhancement works"
    - "Multi-step forms maintain state"

error_handling:
  form_interaction_errors:
    - continue_on_field_error: true
    - log_validation_details: true
    - attempt_alternative_selectors: true
  
  submission_prevention:
    - intercept_form_submissions: true
    - prevent_actual_emails: true
    - avoid_spam_generation: true

integration:
  reporting_reporting:
    attach_form_screenshots: true
    include_validation_videos: true
    form_analysis_report: true
  
  test_data_factory:
    generate_realistic_data: true
    include_edge_cases: true
    support_multiple_languages: false
  
  wordpress_integration:
    use_wp_page_objects: true
    handle_plugin_variations: true
    test_wp_specific_features: true
  
  accessibility_integration:
    run_form_specific_axe_tests: true
    validate_form_labels: true
    test_keyboard_only_interaction: true