# Individual Test Case Template
# This template defines the structure for individual test case specifications

name: "descriptive-test-case-name"
description: "Clear description of what this test validates"
category: "core-infrastructure|navigation-ux|interactive-elements|accessibility|wordpress-specific"
priority: "critical|high|medium|low"

# Allure reporting configuration
allure:
  epic: "Functionality Testing"
  feature: "Specific Feature Being Tested"
  story: "User Story or Business Requirement"
  severity: "critical|normal|minor|trivial"
  tags:
    - "smoke-test"
    - "regression"
    - "accessibility"

# Test execution configuration
execution:
  timeout: 30000
  retries: 2
  browsers: ["chrome", "firefox", "safari"]
  run_on:
    pages: ["all", "homepage", "contact", "specific-page"]  # Which pages to run on
    conditions:  # Optional conditions for test execution
      - site_has_forms: true
      - site_has_navigation: true

# Test steps and assertions
steps:
  - name: "Setup"
    actions:
      - type: "navigate"
        target: "{{baseUrl}}{{currentPage}}"
        description: "Navigate to target page"
      
      - type: "wait_for_load_state"
        state: "domcontentloaded"
        timeout: 10000
        description: "Wait for page to load"
      
      - type: "wait_for_stability"
        strategies: ["networkidle", "domcontentloaded"]
        description: "Ensure page is stable"

  - name: "Main Validation"
    actions:
      - type: "assert_response_status"
        expected: 200
        description: "Verify page loads successfully"
        severity: "critical"
      
      - type: "assert_page_title"
        not_empty: true
        description: "Page has a title"
        severity: "normal"
      
      - type: "custom_validation"
        function: "validateSpecificRequirement"
        parameters:
          requirement: "specific_check"
        description: "Custom business logic validation"

  - name: "Error Detection"
    actions:
      - type: "check_javascript_errors"
        ignore_patterns:
          - "analytics"
          - "third-party-widget"
        description: "Verify no critical JavaScript errors"
      
      - type: "check_console_warnings"
        max_allowed: 5
        description: "Limited console warnings acceptable"

# Error handling strategy
error_handling:
  on_failure:
    - take_screenshot: true
    - capture_trace: true
    - log_browser_state: true
    - continue_test_suite: true  # Don't stop other tests
  
  recovery_actions:
    timeout:
      - wait: 2000
      - retry_navigation: true
    element_not_found:
      - wait: 1000
      - scroll_to_find: true
      - fallback_selector: "alternative-selector"

# Expected results
assertions:
  critical:
    - "Page responds with 200 status"
    - "No critical JavaScript errors"
    - "Required elements are present"
  
  normal:
    - "Page loads within performance threshold"
    - "All internal links are functional"
    - "Form submissions work correctly"
  
  minor:
    - "No console warnings"
    - "Images load properly"
    - "Analytics tracking works"

# Integration with existing infrastructure
integration:
  uses_utilities:
    - "test-helpers/safeNavigate"
    - "test-helpers/setupTestPage"
    - "test-helpers/teardownTestPage"
    - "site-loader/loadSite"
  
  error_context:
    track_actions: true
    include_timing: true
    capture_network: false
  
  allure_attachments:
    - type: "screenshot"
      when: "on_failure"
    - type: "trace"
      when: "on_failure"
    - type: "video"
      when: "on_failure"