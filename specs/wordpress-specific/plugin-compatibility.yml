# WordPress Plugin Compatibility Testing Specification
# Tests compatibility and functionality of common WordPress plugins

metadata:
  category: "wordpress-specific"
  version: "1.0.0"
  description: "Tests WordPress plugin compatibility and functionality"
  priority: "medium"
  dependencies: ["test-helpers", "site-loader", "wordpress-page-objects"]
  tags:
    - "wordpress-plugins"
    - "plugin-compatibility"
    - "cms-functionality"

configuration:
  timeout: 30000
  retries: 2
  parallel: true
  browsers: ["chrome", "firefox", "safari"]

common_plugins:
  contact_forms:
    - name: "Contact Form 7"
      detection: ".wpcf7-form, .wpcf7"
      selectors:
        form: ".wpcf7-form"
        fields: ".wpcf7-form input, .wpcf7-form textarea, .wpcf7-form select"
        submit: ".wpcf7-submit"
    
    - name: "Gravity Forms"
      detection: ".gform_wrapper"
      selectors:
        form: ".gform_wrapper form"
        fields: ".gfield input, .gfield textarea, .gfield select"
        submit: ".gform_button"
    
    - name: "WPForms"
      detection: ".wpforms-form"
      selectors:
        form: ".wpforms-form"
        fields: ".wpforms-field input, .wpforms-field textarea"
        submit: ".wpforms-submit"
  
  seo_plugins:
    - name: "Yoast SEO"
      detection: "meta[name='generator'][content*='Yoast']"
      elements:
        breadcrumbs: ".yoast-breadcrumb"
        schema: "script[type='application/ld+json']"
    
    - name: "Rank Math"
      detection: "meta[name='generator'][content*='Rank Math']"
      elements:
        schema: "script[type='application/ld+json']"
  
  caching_plugins:
    - name: "WP Rocket"
      detection: "<!-- This website is like a Rocket -->"
    
    - name: "W3 Total Cache"
      detection: "<!-- Performance optimized by W3 Total Cache -->"

test_cases:
  - name: "contact_form_plugin_testing"
    description: "Test contact form plugin functionality and compatibility"
    priority: "high"
    reporting:
      epic: "WordPress Plugins"
      feature: "Contact Form Plugins"
      story: "As a user, I want contact forms to work correctly"
      severity: "normal"
    
    execution:
      for_each_page: "{{siteConfig.testPages}}"
      conditions:
        - response_status: 200
        - forms_present: true
      steps:
        - action: "detect_contact_form_plugins"
          plugins: "{{commonPlugins.contactForms}}"
          detection_method: "dom_analysis"
          description: "Detect which contact form plugins are active"
        
        - action: "test_contact_form_7"
          if: "cf7_detected"
          tests:
            - form_structure: "validate CF7 form markup"
            - ajax_functionality: "test AJAX form submission"
            - validation_messages: "check error/success messages"
            - field_types: "test different field types"
            - spam_protection: "validate CAPTCHA integration"
          prevent_submission: true
          description: "Test Contact Form 7 specific functionality"
        
        - action: "test_gravity_forms"
          if: "gravity_forms_detected"
          tests:
            - conditional_logic: "test field conditional display"
            - multi_page_forms: "test form pagination"
            - field_calculations: "test calculation fields"
            - form_validation: "test real-time validation"
          prevent_submission: true
          description: "Test Gravity Forms specific features"
        
        - action: "test_wpforms"
          if: "wpforms_detected"
          tests:
            - drag_drop_builder: "validate form structure"
            - payment_forms: "test payment integration markers"
            - smart_tags: "validate dynamic content"
          prevent_submission: true
          description: "Test WPForms functionality"

  - name: "seo_plugin_testing"
    description: "Test SEO plugin functionality and output"
    priority: "medium"
    reporting:
      epic: "WordPress Plugins"
      feature: "SEO Plugins"
      story: "As a site owner, I want proper SEO optimization"
      severity: "normal"
    
    execution:
      sample_pages: 5  # Test representative pages
      steps:
        - action: "detect_seo_plugins"
          plugins: "{{commonPlugins.seoPlugins}}"
          detection_method: "meta_tag_analysis"
          description: "Detect active SEO plugins"
        
        - action: "validate_seo_meta_output"
          meta_tags:
            - title: "proper length and content"
            - description: "exists and appropriate length"
            - og_tags: "Open Graph tags present"
            - twitter_cards: "Twitter Card tags present"
            - canonical: "canonical URL set correctly"
          description: "Validate SEO meta tag output"
        
        - action: "test_structured_data"
          schema_types:
            - organization: "business information"
            - website: "site navigation"
            - breadcrumb: "navigation breadcrumbs"
            - article: "blog posts/pages"
          validation_method: "json_ld_parsing"
          description: "Test structured data implementation"
        
        - action: "test_yoast_seo_features"
          if: "yoast_detected"
          features:
            - breadcrumbs: "test breadcrumb functionality"
            - xml_sitemap: "validate sitemap generation"
            - social_previews: "check social media integration"
          description: "Test Yoast SEO specific features"

  - name: "caching_plugin_testing"
    description: "Test caching plugin compatibility and performance impact"
    priority: "low"
    reporting:
      epic: "WordPress Plugins"
      feature: "Caching Plugins"
      story: "As a developer, I want caching plugins to work correctly"
      severity: "minor"
    
    execution:
      sample_pages: 3
      steps:
        - action: "detect_caching_plugins"
          plugins: "{{commonPlugins.cachingPlugins}}"
          detection_method: "html_comment_analysis"
          description: "Detect active caching plugins"
        
        - action: "test_cache_headers"
          headers:
            - cache_control: "appropriate cache directives"
            - expires: "proper expiration dates"
            - etag: "entity tags for cache validation"
            - last_modified: "last modification dates"
          description: "Validate caching HTTP headers"
        
        - action: "test_page_load_impact"
          measurements:
            - first_load: "uncached page load time"
            - cached_load: "cached page load time"
            - resource_optimization: "CSS/JS minification"
          comparison: true
          description: "Measure caching performance impact"

  - name: "security_plugin_testing"
    description: "Test security plugin functionality and headers"
    priority: "medium"
    reporting:
      epic: "WordPress Plugins"
      feature: "Security Plugins"
      story: "As a site owner, I want proper security measures"
      severity: "normal"
    
    execution:
      sample_pages: 2
      steps:
        - action: "test_security_headers"
          headers:
            - x_frame_options: "clickjacking protection"
            - x_content_type_options: "MIME type sniffing protection"
            - x_xss_protection: "XSS protection"
            - strict_transport_security: "HTTPS enforcement"
            - content_security_policy: "CSP implementation"
          description: "Validate security HTTP headers"
        
        - action: "test_wp_security_hardening"
          checks:
            - wp_version_hidden: "WordPress version not exposed"
            - generator_meta_removed: "generator meta tag removed"
            - directory_browsing: "directory listing disabled"
            - file_permissions: "proper file access restrictions"
          description: "Test WordPress security hardening"

assertions:
  critical:
    - "Contact forms are functional and accessible"
    - "No plugin-related JavaScript errors"
    - "Plugin output doesn't break page structure"
  
  normal:
    - "SEO plugins generate proper meta tags"
    - "Caching plugins don't break functionality"
    - "Security headers are properly implemented"
  
  minor:
    - "Plugin features work as expected"
    - "Performance impact is reasonable"
    - "Plugin integrations are functioning"

error_handling:
  plugin_detection_errors:
    - continue_if_plugin_not_detected: true
    - log_detection_failures: true
    - use_fallback_detection_methods: true
  
  plugin_interaction_errors:
    - prevent_actual_form_submissions: true
    - handle_ajax_timeouts: true
    - continue_on_plugin_errors: true

integration:
  reporting_reporting:
    attach_plugin_analysis: true
    include_performance_impact: true
    security_assessment: true
  
  wordpress_integration:
    use_wp_page_objects: true
    leverage_wp_specific_knowledge: true
    handle_plugin_variations: true
  
  performance_monitoring:
    track_plugin_impact: true
    measure_load_times: true
    analyze_resource_usage: false  # Advanced feature